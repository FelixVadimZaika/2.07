Створити базовий абстрактний клас  Animal(Домашня тварина)
 з полями
•	ім’я тваринки(string)
•	вік(size_t)
методами
•	конструктор(и)
•	методи доступу до полів(getters, setters)
•	абстрактні методи 
	void sound() const,
	void type() const,
віртуальний метод
virtual show() const, виводить імя тваринки, вік , викликає методи sound() та type()

Створити похідні класи конкретних тваринок «Собака», «Кішка», «Папуга», «Хом'як»(чи ін.), які реалізують абстрактні методи.
•	sound() - видає звук тваринки (виводити текст у консоль або повертати рядок з назвою звуку, return ”Meow”)
•	type() –виводить у консоль або повертати  назву  підвиду тварини(return ”Cat”)
•	show() - відображає характеристики тварини, її тип та  звук

Створити масив( або вектор) різних об’єктів домашніх тваринок.
Викликати методи sound(), show(), type() для  кожного об’єкту тваринки.

Animal *arr [] = { new Cat(“Murka”, 2, “red”),.... }
vector<Animal * > vect { new Cat,.... }

-----------------------------------------------------------------------------------------------------------------------------
1.1. Доповнити  1-е завдання класом Домашній Зоопарк(Zoo), що містить
	поля
•	вектор домашніх тваринок(vector<Animal *> zoo)
	методи
•	конструктор(зоопарк  пустий)
•	деструктор, вилучити всі тваринки з вектору( спочатку слід вилучити динамічні об’єкти тваринок, потім можна  очищати елементи вектору zoo.clear()) 
•	додавання певної тваринки у Зоопарк на замовлення користувача(запитати тип тваринки, кличку, вік, додаткові характеристики, створити динамічний екземпляр тваринки та додати до вектору  
•	метод автоматичного додавання кількох "випадкових" тваринок у зоопарк
•	метод виведення усіх  тваринок зоопарку
•	метод редагування тваринки(редагується назва чи вік, не тип тваринки)
•	метод вилучення(продажу) тваринки з зоопарку
•	метод вилучення(продажу) всіх тваринок

class HomeZoo
{
	vector <Animal *> zoo;
};
-------------------------------------------------------------------------------------------------------------------------------------------
